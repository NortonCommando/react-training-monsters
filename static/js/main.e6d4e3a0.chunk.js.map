{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","length","map","SearchBox","placeholder","handleChange","onChange","type","App","handleSearchChange","e","console","log","setState","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","fetch","then","response","json","users","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mTAWeA,EATF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCOTC,G,MAXE,SAAAR,GAAK,OACpB,sBAAKC,UAAU,sBAAf,cACED,EAAMS,SAASC,OAAS,EACtBV,EAAMS,SAASE,KAAI,SAAAP,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAEnB,iDCGOO,G,MARG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAChB,uBACEb,UAAU,SACVc,SAAUD,EACVE,KAAK,SACLH,YAAaA,MC4BFI,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAOFC,mBAAqB,SAACC,GACpBC,QAAQC,IAAR,gBACA,EAAKC,SAAS,CAAEC,YAAaJ,EAAEK,OAAOC,SARtC,EAAKC,MAAQ,CACXjB,SAAU,GACVc,YAAa,IAJH,E,0CAad,WAAU,IAAD,EAC4BI,KAAKD,MAAhCjB,EADD,EACCA,SAAUc,EADX,EACWA,YACZK,EAAmBnB,EAASoB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQE,KAAKwB,cAAcC,SAASR,EAAYO,kBAClD,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWY,YAAY,SAASC,aAAca,KAAKT,qBACnD,cAAC,EAAD,CAAUT,SAAUmB,S,+BAG1B,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKd,SAAS,CAAEb,SAAU2B,W,GA5B7BC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.e6d4e3a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}></img>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;","import React from 'react'\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css';\r\nconst CardList = props => (\r\n  <div className=\"card-list-container\"> {\r\n    props.monsters.length > 0 ?\r\n      props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))\r\n      : <p>No results!</p>\r\n  }\r\n  </div>\r\n)\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => (\r\n  <input\r\n    className=\"search\"\r\n    onChange={handleChange}\r\n    type=\"search\"\r\n    placeholder={placeholder} />\r\n)\r\n\r\nexport default SearchBox;\r\n","import './App.css';\nimport React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleSearchChange = (e) => {\n    console.log(this);\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } =  this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <SearchBox placeholder=\"Search\" handleChange={this.handleSearchChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>);\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}